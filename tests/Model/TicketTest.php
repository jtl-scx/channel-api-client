<?php
/**
 * TicketTest
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  JTL\SCX\Client\Channel
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * SCX Channel API
 *
 * SCX Channel API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace JTL\SCX\Client\Channel\Model;

use JTL\SCX\Client\Channel\AbstractApiModelTest;

/**
 * TicketTest Class Doc Comment
 *
 * @category    Class
 * @description Ticket
 * @package     JTL\SCX\Client\Channel
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 * @covers      \JTL\SCX\Client\Channel\Model\Ticket
 */
class TicketTest extends AbstractApiModelTest
{

    /**
     * @return array
     * @dataProvider
     */
    public function expectedInterface(): array
    {
        return [
            'assert property SellerId' => [
                'sellerId',
                'string',
                'getSellerId',
                'setSellerId'
            ],
            'assert property TicketId' => [
                'ticketId',
                'string',
                'getTicketId',
                'setTicketId'
            ],
            'assert property Topic' => [
                'topic',
                '\JTL\SCX\Client\Channel\Model\Topic',
                'getTopic',
                'setTopic'
            ],
            'assert property Reference' => [
                'reference',
                '\JTL\SCX\Client\Channel\Model\TicketReference',
                'getReference',
                'setReference'
            ],
            'assert property ReplyRequested' => [
                'replyRequested',
                'bool',
                'getReplyRequested',
                'setReplyRequested'
            ],
            'assert property CreatedAt' => [
                'createdAt',
                '\DateTime',
                'getCreatedAt',
                'setCreatedAt'
            ],
            'assert property From' => [
                'from',
                '\JTL\SCX\Client\Channel\Model\TicketFrom',
                'getFrom',
                'setFrom'
            ],
            'assert property Subject' => [
                'subject',
                'string',
                'getSubject',
                'setSubject'
            ],
            'assert property Message' => [
                'message',
                'string',
                'getMessage',
                'setMessage'
            ],
            'assert property Attachment' => [
                'attachment',
                '\JTL\SCX\Client\Channel\Model\TicketAttachment[]',
                'getAttachment',
                'setAttachment'
            ],
        ];
    }

    /**
     * @test
     * @dataProvider expectedInterface
     */
    public function it_has_expected_interface(string $property, string $type, string $expectedGetter, string $expectedSetter): void
    {
        $sample = $this->buildSampleForDataType($type);
        $sut = new Ticket([$property => $sample]);

        $this->assertMethodExists($sut, $expectedGetter);
        $this->assertSame($sample, $sut->$expectedGetter());

        $this->assertArrayHasKey($property, $sut);
        $this->assertSame($sample, $sut[$property]);

        $newSample = $this->buildSampleForDataType($type);
        $this->assertMethodExists($sut, $expectedSetter);
        $sut->$expectedSetter($newSample);
        $this->assertSame($newSample, $sut[$property]);
    }

}
